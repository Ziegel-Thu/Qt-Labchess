选题：
改进Lab1至国际象棋，并增加存档回溯功能。参考Steam上的TimeChessDemo游戏，完成Time machine 的实现，在可能的基础上构建time piece的特点。
国际象棋难以实现计分，会改成给玩家时光回溯技能。

需求分析：
需要实现国际象棋的棋盘构建，国际象棋棋子的对象的构建，完成胜负判定和基本UI按钮构建。
需要实现棋子的移动，吃子，以及棋子的生存期，以及国际象棋规定的特殊功能。
需要实现存档回溯功能。

概要设计：
我尝试对lab1的代码保留原结构，但是把棋盘改造成国际象棋棋盘，棋子改造成国际象棋棋子，并完成对应的功能。
我将力争使用个人设计的MySTL，加强对安全代码的理解。
我需要增加的有棋子的各种走法以及种类，还涉及关于吃子之后的lifespan的控制，这是为了时光回溯的时候可以复活死去的棋子（但是他们会在原定的步数die）。
我在可能的情况下会增加time piece的设置，他将在时光回溯中保持固定位置，并拥有最高的优先级，所有被他占位置的棋子都会死亡。

详细设计：
UI部分
BoardWidget将会被更改，利用涂色函数把他图成灰白两色相间的棋盘。其中特意设置成灰色而不是黑色是因为线上的国际象棋因为还要放置棋子，用黑色可能会重叠。
棋子是我专门从网上下载的图片，通过图片处理技术改成了红蓝两色，增强对比，同时底色设置为透明，增强游戏质感。
我计划在顶端和底端增加一个箭头或者highlight，更清晰的展示哪一方将执行下一步。
OperationWidget将会被更改，增加时光机按钮，返回按钮，前进按钮，后退按钮，在时间允许的情况下，我将增加计时功能（这也是国际象棋的一个玩法，通过限时来增加挑战性）

Core部分
对于游戏的过程判断，宏观上对走棋，吃子，胜负的判断都做更改。
走棋是一个很困难的问题，因为设计选子和走棋，还要考虑是否valid。
将会有isPathClear函数，用于isValidMove函数，用于判断走棋是否valid。
对于有棋子的地方，还要判断是否满足吃的规则。
我的逻辑将会是：第一次选中了一个合法的子之后，如果下一次点到了一个合法的位置，则视为一次合法的走棋，如果点到了一个自己的其他子，将会作为更换走棋目标。
升变规则中对于升变的选项会有机会的情况下设置，默认是后，王车易位，过路兵等功能在有条件的基础上会完善。
如果选中的棋的格子能够被高亮，这也是一个改进的空间。

时光机部分：
每一个子会有一个lifespan，当棋子死亡的时候，他的lifespan将会被设置为0，当进行时光回溯的时候，如果该子在回溯的步数中，则复活该子，并设置lifespan为他死去的位置和回溯的位置的差值。
回溯会用一个vector记录所有的历史棋盘状况，在棋子死亡的时候他的lifespan会设置成0，同时在历史中他的死亡时间将会被记录，以供回溯时使用（感觉这一块的逻辑需要仔细去思考）（我更倾向于按照棋子保留每一个棋子的所在位置以及相关信息）
时光机的按钮被按下后，将会出现返回按钮（退出时光机），后退按钮（时光回溯），前进按钮（时光前进）。

类图：
这里涉及的东西太多太复杂，感觉实在是很难画出来，等思路完全理顺了看看试试吧